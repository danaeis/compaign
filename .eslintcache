[{"/home/danaeis/Templates/react-project/compaign/src/components/dashboard/Compaign.js":"1","/home/danaeis/Templates/react-project/compaign/src/index.js":"2","/home/danaeis/Templates/react-project/compaign/src/components/dashboard/UserDashboard.js":"3","/home/danaeis/Templates/react-project/compaign/src/components/login/ChangePassword.js":"4","/home/danaeis/Templates/react-project/compaign/src/components/dashboard/Header.js":"5","/home/danaeis/Templates/react-project/compaign/src/reportWebVitals.js":"6","/home/danaeis/Templates/react-project/compaign/src/components/login/LoginForm.js":"7","/home/danaeis/Templates/react-project/compaign/src/App.js":"8","/home/danaeis/Templates/react-project/compaign/src/components/Utils/PublicRoute.js":"9","/home/danaeis/Templates/react-project/compaign/src/components/Utils/Common.js":"10","/home/danaeis/Templates/react-project/compaign/src/components/Utils/PrivateRoute.js":"11","/home/danaeis/Templates/react-project/compaign/src/components/dashboard/UserProfile.js":"12","/home/danaeis/Templates/react-project/compaign/src/components/dashboard/Profile.js":"13","/home/danaeis/Templates/react-project/compaign/src/components/dashboard/campDetail.js":"14","/home/danaeis/Templates/react-project/compaign/src/components/login/ForgotPassword.js":"15","/home/danaeis/Templates/react-project/compaign/src/components/login/ResetPassword.js":"16","/home/danaeis/Templates/react-project/compaign/src/components/dashboard/UpdateProfile.js":"17"},{"size":5106,"mtime":1611733415217,"results":"18","hashOfConfig":"19"},{"size":779,"mtime":1608290427833,"results":"20","hashOfConfig":"19"},{"size":462,"mtime":1608328598643,"results":"21","hashOfConfig":"19"},{"size":7736,"mtime":1611743433214,"results":"22","hashOfConfig":"19"},{"size":4041,"mtime":1611740040508,"results":"23","hashOfConfig":"19"},{"size":362,"mtime":1606378451192,"results":"24","hashOfConfig":"19"},{"size":7905,"mtime":1611512411216,"results":"25","hashOfConfig":"19"},{"size":1729,"mtime":1611384078036,"results":"26","hashOfConfig":"19"},{"size":524,"mtime":1610475739459,"results":"27","hashOfConfig":"19"},{"size":2238,"mtime":1611739445280,"results":"28","hashOfConfig":"19"},{"size":510,"mtime":1610476438297,"results":"29","hashOfConfig":"19"},{"size":439,"mtime":1608312175889,"results":"30","hashOfConfig":"19"},{"size":1545,"mtime":1611386234792,"results":"31","hashOfConfig":"19"},{"size":4356,"mtime":1611725227524,"results":"32","hashOfConfig":"19"},{"size":4702,"mtime":1611210199926,"results":"33","hashOfConfig":"19"},{"size":5749,"mtime":1610626542712,"results":"34","hashOfConfig":"19"},{"size":10738,"mtime":1611742518863,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"jgij6i",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"39"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},"/home/danaeis/Templates/react-project/compaign/src/components/dashboard/Compaign.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100"],"import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport {getApi,getToken, setUserSession} from '../Utils/Common'\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport Card from 'react-bootstrap/Card'\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Modal from 'react-bootstrap/Modal'\nimport {Link} from 'react-router-dom'\nimport CampDetail from './campDetail'\nimport { Redirect } from \"react-router-dom\";\nimport { CardColumns, CardImg, Col,Row } from \"react-bootstrap\";\n\nexport default function Compaign() {\n  \n  const [userCompaigns, setUserCompaigns] = useState([]);\n  const [isResponced, setIsResponce] = useState(false);\n  const [error, setError] = useState(null);\n  const [modalShow, setModalShow] = useState(false);\n  const [compId, setCompId] = useState(0);\n\n \n\n  const url=getApi();\n  \n  let content = null;\n  \n\n  useEffect(()=>{\n    axios.get(`${url}/api/reserve/camp/detail`,\n      {\n        headers:{\n          'authorization': `JWT ${getToken()}`\n        }\n      })\n      .then((res)=> {\n        // console.log(res);\n        setUserCompaigns([res.data.result]);\n        setIsResponce(true);\n        // console.log('total',userCompaigns);\n      })\n      .catch((error) => {\n        console.log(\"error:\",error);\n        setIsResponce(true);\n        setError(error);\n      })\n    },[url])\n\n   \n\n    \n\n\n\n\n  if(isResponced){\n    // console.log(userCompaigns);\n    if(userCompaigns.length>0){\n      // console.log(userCompaigns[0]);\n      return(\n\n        <div className=\"relative col-md-10 col-sm-10 col-lg-10 mx-auto my-auto\">\n        <div className=\"card text-center border-0 shadow z-depth-2 rounded\">\n          <Card >\n              <Card.Header>\n                <Card.Title className=\"pt-1\">\n                <small className=\"text-info\">لیست اردوهای پیش رو :</small>\n                </Card.Title>\n              </Card.Header>\n\n\n              {/* 'max-height': 'calc(100vh - 210px)', 'overflow-y': 'auto' */}\n              <Card.Body className=\"text-center\" style={{'max-height': 'calc(100vh - 210px)', 'overflow-y': 'auto', 'background-color': 'primary' }}>\n                \n                \n\n                \n                    \n                  <Row className=\"text-center\">\n                  \n                  {userCompaigns[0].map( (compaign, i) => \n                      \n                      <div className=\"text-center px-2 py-0 col-12 col-sm-12 col-md-6 col-lg-6 col-xl-4  my-1 border-0 \">\n                        <Card className=\"text-center shadow  border-0  my-auto py-auto h-100\"  >\n                          <Card.Body className=\"\">\n                  {(compaign.image )? \n                            <Card.Img \n                            variant=\"top\" \n                            className=\"mx-auto my-2\" \n                            src={\"https://\" + compaign.image.substr(16,compaign.image.length)} \n                            alt=\"پوستر اردو\" \n                            \n                            width=\"100%\"/>\n                          :<Card.Img variant=\"top\" className=\"mx-auto my-2\" src=\"#\" alt=\"پوستر اردو\" />}\n                            <div className=\"position-relative fixed-bottom\">\n                              <Card.Title>{compaign.name}</Card.Title>\n                              <Card.Text>\n                              {compaign.description}\n                              </Card.Text>\n                              {/* <Button className=\"fixed bottom\"  onClick={() => { handleModal(compaign.id)}} >{compaign.is_registered ?  \"ثبت نام شده\":\"جزییات بیشتر .. \"} </Button> */}\n                              <Link   to={`/campaignDetail/${compaign.id}`} >\n                                \n                                <Button >\n                                {compaign.is_registered ?  \"ثبت نام شده\":\"جزییات بیشتر .. \"} \n                                </Button>\n                              </Link>\n                            </div>\n                            \n                          \n                          </Card.Body>\n                      \n                      </Card>\n                      </div>\n                    \n                )} \n                  \n                  \n                  </Row>\n               \n                \n               \n                \n              </Card.Body>\n          </Card>\n\n        </div></div>\n\n\n\n        \n      );\n    }\n    else{\n      return(\n        \n          <div dir=\"rtl\">\n            <p>\n            اردویی جهت نمایش وجود ندارد . . . \n            </p>\n          </div>\n        \n      );\n    }\n  }\n  else{\n    if(error){\n      return(\n        <div>\n          خظا در برقراری ارتباط\n        </div>\n      )\n    }\n    else{\n      return(\n        <div>\n          <Spinner animation=\"border\" variant=\"primary\" />\n        </div>\n      )\n    }\n  }\n \n  return (\n    <div>\n      {content}\n    </div>\n  )\n}",["101","102"],"/home/danaeis/Templates/react-project/compaign/src/index.js",[],["103","104"],"/home/danaeis/Templates/react-project/compaign/src/components/dashboard/UserDashboard.js",["105","106","107","108","109","110","111"],"import Axios from 'axios';\nimport React, { useState } from 'react';\nimport { getToken, removeUserSession } from '../Utils/Common';\nimport axios from 'axios'\nimport Header from './Header'\nimport Compaign from './Compaign'\nimport {getApi,getAccessToken} from '../Utils/Common'\n\nfunction Dashboard(props) {\n  \n \n  return (\n    <div className=\"min-vh-100\">\n      <Header></Header>\n      <Compaign></Compaign>\n      <br/>\n    </div>\n  );\n}\n \nexport default Dashboard;",["112","113"],"/home/danaeis/Templates/react-project/compaign/src/components/login/ChangePassword.js",["114","115","116","117","118","119","120","121"],"\nimport React, {useEffect, useState} from \"react\";\nimport axios from 'axios'\nimport {getApi,getToken} from '../Utils/Common'\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport Spinner from 'react-bootstrap/Spinner'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\n\nexport default function ChangePassword(props) {\n\n\n  const [state , setState] = useState({\n    curPassword : \"\",\n    newpassword : \"\",\n    renewpassword : \"\"\n})\n\n\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState(null);\n  const [isResponced, setIsResponced] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [reset, setReset] = useState(false);\n\n\n\n  const [show, setShow] = useState(false);\n  const [isChanged, setIsChanged] = useState(false);\n \n\n  const url=getApi();\n  \n  let handleSubmit = (event) =>{\n    \n      console.log(state.curPassword + \" and \" + state.newpassword + \" and \" + state.renewpassword);\n\n      setIsChanged(false);\n      setIsLoading(true);\n      event.preventDefault();\n      \n      console.log(state.newpassword );\n      if(state.newpassword === state.renewpassword){\n        \n      \n        axios.post(`${url}/api/auth/users/set_password/`,\n        \n            {\n                \"new_password\": state.newpassword,\n                \"re_new_password\": state.renewpassword,\n                \"current_password\" : state.curPassword\n            },\n            {\n              headers:{\n                'authorization': `JWT ${getToken()}`,\n                'Content-Type': 'application/json',}\n            }\n            \n            )\n            .then((res)=> {\n              console.log(res.status);\n              setShow(true);\n              //if(res.status === 204){\n                console.log(\"OK\");\n                setIsChanged (true);\n                //props.onHide();\n              //}\n              setIsResponced(true);\n              setIsLoading(false);\n              setIsError(false);\n\n            })\n            .catch(e => {\n              console.log(\"error:\",e.response.data);\n              if(e.response.data[\"current_password\"]){\n                setError(\"رمز فعلی اشتباه است\\n\");\n              }\n              if(e.response.data[\"new_password\"]){\n                setError(\"رمز جدید وارد شده بسیار ضعیف است\"+\"\\n\");\n              }\n              else{\n                setError(\n                  \"تغییر رمزعبور شما با مشکل مواجه شد\"+\n                \"دوباره امتحان کنید\" \n                );\n              }\n              setShow(true);\n              setIsLoading(false);\n              setIsResponced(true);\n              setIsError(true);\n            })\n      }\n      else{\n        setError(\"رمز وارد شده و تکرار آن یکسان نمیباشد\\n\");\n        setIsError(true);\n        setIsLoading(false);\n      }\n\n  }\n \n   \n    \n\n\n \n  let content= null;\n\n   \n    \n    content=\n          <Card className=\"text-center border-0\">\n            <Card.Title className=\"h5 text-primary text-right pt-4 px-4\"><small className=\"text-primary\">برای تغییر رمزعبور اطلاعات زیر را تکمیل کنید:</small> </Card.Title>\n            <Card.Body className=\"text-center\">\n            \n             <div>\n                  <form className=\"\"  method=\"POST\" onSubmit={(e) => {handleSubmit(e);}} >\n                    \n                          <div className=\"form-group border rounded-lg shadow-top-sm\" >\n                          <input \n                              aria-label=\"cuPassword\"\n                              name=\"curPassword\"\n                              id=\"curPassword\" \n                              type=\"password\"\n                              placeholder=\"رمز عبور فعلی\"\n                              onChange={(e) => {setState({...state, curPassword : e.target.value})}}\n                              required \n                              className=\"form-control\"\n                              />\n                          </div>\n\n                          <div className=\"form-group border rounded-lg shadow-top-sm\" >\n                          <input \n                              aria-label=\"newPassword\" \n                              name=\"newpassword\" \n                              type=\"password\" \n                              required \n                              className=\"form-control \"\n                              placeholder=\"رمز عبور جدید\"\n                              onChange={(e) => {setState({...state, newpassword : e.target.value})}}\n                              />\n                          </div>\n                          <div className=\"form-group rounded-lg shadow-top-sm\">\n                          <input \n                              aria-label=\"renewPassword\" \n                              name=\"renewpassword\" \n                              type=\"password\" \n                              required \n                              className=\"form-control \"\n                              placeholder=\"تکرار رمز عبور جدید\"\n                              onChange={(e) => {setState({...state, renewpassword : e.target.value})}}\n                          />\n                          </div>\n                         \n                          <label variant=\"danger\" className=\"texts text-danger py-3\">\n                          {isError ? error \n                          :null }\n                        </label>\n                            <div className=\"form-group\">\n                              <Button className=\"text-center\" type=\"submit\"> \n                              {isLoading? <Spinner animation=\"border\" variant=\"primary\" />:\" تغییر رمزعبور\"} \n                              </Button>\n                            </div>\n                            \n\n                  </form>\n                  \n             </div>\n\n            </Card.Body>\n            \n        </Card>\n   \n\nlet result=null;\n\n   \nif(isChanged){\n  result=\n  <div className=\"fixed-bottom mx-4 my-4\">\n        <Toast onClose={() => setShow(false)} show={show} delay={5000} autohide>\n          <Toast.Header>\n          <strong className=\"mr-auto text-primary text-right\">سامانه اردوها</strong>\n            <p></p>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              className=\"rounded mr-2\"\n              alt=\"\"\n            />\n            \n            \n            <small></small>\n          </Toast.Header>\n          <Toast.Body>\n          رمزعبور شما با موفقیت تغییر کرد\n         \n          </Toast.Body>\n        </Toast>\n      </div> \n\n}\n\n// if(error){\n//   result=\n//   <div className=\"fixed-bottom mx-4 my-4\">\n//         <Toast onClose={() => setShow(false)} show={show} delay={5000} autohide>\n//           <Toast.Header>\n//           <strong className=\"mr-auto text-primary text-right\">سامانه اردوها</strong>\n//             <p></p>\n//             <img\n//               src=\"holder.js/20x20?text=%20\"\n//               className=\"rounded mr-2\"\n//               alt=\"\"\n//             />\n            \n            \n//             <small></small>\n//           </Toast.Header>\n//           <Toast.Body>\n//           تغییر رمزعبور شما با مشکل مواجه شد\n//           دوباره امتحان کنید\n            \n//           </Toast.Body>\n          \n//         </Toast>\n//       </div> \n\n// }\n\n\n\n   return (\n    <div>\n      {content}\n      {result}\n     \n    </div>\n  )\n}\n","/home/danaeis/Templates/react-project/compaign/src/components/dashboard/Header.js",["122","123","124","125"],"/home/danaeis/Templates/react-project/compaign/src/reportWebVitals.js",[],["126","127"],"/home/danaeis/Templates/react-project/compaign/src/components/login/LoginForm.js",["128","129","130","131","132","133","134","135","136"],"import React, {useEffect, useState} from \"react\";\nimport axios from 'axios'\n//import {getApi,getToken} from '../Utils/Common'\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport Spinner from 'react-bootstrap/Spinner'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Image from 'react-bootstrap/Image'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\n//import React from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport logo2 from \"../../images/logo2.png\"\nimport basij from \"../../images/basij.jpg\"\n//import axios from \"axios\";\nimport { setUserSession, getApi} from '../Utils/Common';\n\nimport FloatingLabel from 'react-styled-floating-label';\nimport Card from 'react-bootstrap/Card'\n\n//import Spinner from 'react-bootstrap/Spinner'\n//import Modal from 'react-bootstrap/Modal';\n//import Button from 'react-bootstrap/Button'\n//import Toast from 'react-bootstrap/Toast'\n\nexport default function LoginForm(props){\n  const [input , setInput] = useState({\n    userName : \"\",\n    password : \"\",\n});\nconst [error, setError] = useState(null);\nconst [isLoading, setIsLoading] = useState(false);\nconst [isError, setIsError] = useState(false);\nconst [errorShow, setErrorShow] = useState(false);\nconst [redirect, setRedirect] = useState(false);\nconst [labelShowU, setLableShowU] = useState(false);\nconst [labelShowP, setLableShowP] = useState(false);\n\n\nlet validate = ()=>{\n  let errors = [];\n  let isValid = true;\n\n  if (input.userName === \"\") {\n    isValid = false;\n    setIsError(true);\n    errors += \"شماره دانشجویی خود را وارد کنید\\n\";\n  }    \n  if (input.password === \"\") {\n    isValid = false;\n    setIsError(true);\n    errors += \"رمز عبور را وارد کنید\\n\";\n  }\n\n\n  setError(errors)\n  \n  \n  return isValid;\n\n}\nlet handleSubmit = (event)=>{\n\n    event.preventDefault();\n    console.log(\"error\", error );\n  console.log(input.userName , input.password);\n  if(validate()){\n    setIsLoading(true);\n    setError(null);\n    const url=getApi();\n    axios.post(`${url}/api/auth/jwt/create/`,{\n        student_code : input.userName,\n        password : input.password,\n    },\n    {\n      headers:{\n        'Content-Type': 'application/json',}\n    }\n    ).then( response => {\n\n    console.log(response.data);\n    setUserSession(response.data.access,response.data.refresh);\n  \n    setIsLoading(false);\n    setRedirect(true);\n    \n    console.log(\"error\", error );\n\n    }).catch((e) => {\n      setError(e.response.data.detail);\n      if(e.response.status === 401){\n        setError(\"نام کاربری و یا رمز عبورتان نادرست است\");\n      }\n      setIsError(true);\n      //console.log(e.response.data.detail);\n      // console.log(e);\n      console.log(e.response);\n\n      setIsLoading(false);\n      \n    });\n  }\n  \n}\n\n// let handleClose = ()=>{setForgotShow(false);}\n// let handleShow = ()=>{setForgotShow(true);}\nif(redirect) return <Redirect to='/dashboard'/>;\nreturn(\n  <div>\n        <div className=\"row align-items-center min-vh-100 \">\n        <div className=\"col-md-7 col-sm-10 col-lg-5 mx-auto my-auto\">\n        <Card className=\"text-center\">\n            <Card.Header className=\"bg-light text-center\">\n            <Row className=\" px-auto\">\n              <Col xs={3} md={4} className=\"mx-auto \">\n                <Image src={logo2} rounded fluid/>\n              </Col>\n              {/* <Col xs={3} md={2} className=\"mx-auto mr-0\">\n                <Image src={basij} rounded fluid/>\n              </Col> */}\n\n              \n              {/* <Col xs={5} md={5} >\n                <p className=\" text-info font-weight-bold \">\n                  <br/><br/>\n                سامانه اردوها ی دانشگاه شهید رجایی\n                </p>\n              </Col> */}\n\n            </Row>\n               \n            <p className=\" text-info font-weight-bold \">\n                  <br/>\n                سامانه اردوهای دانشگاه شهید رجایی\n                </p>\n           \n              </Card.Header>\n            <Card.Body>\n                <Card.Title >\n                    {/* <div className=\"m=auto px-5 mx-5 max-vh-50 md:my-5 md:px-5\">\n                      <img className=\"card-img-top \" src={logo} alt=\"university logo\" />                \n                    </div> */}\n                </Card.Title>\n                <Card.Text>\n                <form className=\"\"  to=\"/dashboard\" method=\"POST\" onSubmit={handleSubmit} >\n                        <label variant=\"danger\" className=\"texts text-danger pb-3\">\n                          {isError ? error \n                          :null }\n                        </label>\n\n\n                          <div className=\"form-group rounded-lg shadow-top-sm\">\n                            {labelShowU && <label >شماره ی دانشجویی:</label>}\n                          <input \n                              aria-label=\"userName\" \n                              name=\"userName\" \n                              type=\"text\" \n                              // required \n                              className=\"form-control border\"\n                              placeholder=\"شماره ی دانشجویی\"\n                              onChange={(e) => {setInput({...input, userName : e.target.value})}}\n                              \n                          />\n                          {/* <p className=\"text-danger\"> {isError ? error[\"userName\"]:null } </p> */}\n                          </div>\n\n                          <div className=\"form-group rounded-lg shadow-top-sm\" >\n                            {labelShowP && <label>رمزعبور:</label> }\n                          <input \n                              aria-label=\"password\" \n                              name=\"password\" \n                              type=\"password\" \n                              // required \n                              className=\"form-control align-left\"\n                              placeholder=\"رمز عبور\"\n                              onChange={(e) => {setInput({...input, password : e.target.value}); }}\n                             \n                              />\n                              {/* <p className=\"text-danger\"> {isError ?error[\"password\"]:null} </p> */}\n                          </div>\n                          \n                         \n                           \n                         \n                          \n                          <Button\n                                    type=\"submit\"\n                                    varient=\"primary\"\n                                    className=\" d-block mx-auto my-3 px-5 mt-4\"\n                                    \n                                    >\n                                    \n                                    {isLoading ? <Spinner animation=\"border\" variant=\"primary\" /> : 'ورود به حساب کاربری'}\n                          </Button>\n                          \n                          <div className=\"form-group\">\n                            <Link className=\"text-info\" variant=\"light\" to=\"/forgotPassword\">\n                              رمزعبور خود را فراموش کرده اید؟\n                            </Link>\n                          </div>\n                          {/* {forgotShow &&\n                              <ForgotPassword\n                              show={forgotShow}\n                              onHide={handleClose}\n                            />\n                            \n                            } */}\n                  </form>\n                  \n                </Card.Text>\n                \n            </Card.Body>\n            {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n        </Card> \n            \n            \n    </div></div></div>\n\n);\n\n\n}\n",["137","138"],"/home/danaeis/Templates/react-project/compaign/src/App.js",["139","140","141","142","143","144","145","146"],"import { BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect, \n} from 'react-router-dom'\nimport React, { useState, useEffect } from \"react\"\nimport axios from 'axios';\nimport LoginForm from './components/login/LoginForm'\nimport ChangePassword from './components/login/ChangePassword'\nimport UserDashboard from './components/dashboard/UserDashboard.js'\nimport UserProfile from './components/dashboard/UserProfile.js'\nimport CampDetail from './components/dashboard/campDetail'\n\nimport PrivateRoute from './components/Utils/PrivateRoute';\nimport PublicRoute from './components/Utils/PublicRoute';\nimport { getUser, removeUserSession, setUserSession } from './components/Utils/Common';\nimport ResetPassword from './components/login/ResetPassword';\nimport ForgotPassword from './components/login/ForgotPassword';\n\n \n\nfunction App() {\n  \n  return (\n    <div className=\"container-fluid\">\n      \n      <Router>\n        <Switch>\n          <PublicRoute restricted={true} component={LoginForm} path=\"/\" exact />\n          <PublicRoute restricted={true} component={LoginForm} path=\"/login\" exact />\n          <PublicRoute restricted={true} component={ResetPassword} path=\"/password/reset/confirm/:uid/:token\"></PublicRoute>\n          \n          <PublicRoute component={ForgotPassword} path=\"/forgotPassword\" exact/>\n          <PublicRoute component={CampDetail} path=\"/campaignDetail/:id\" exact/>\n          \n          <PrivateRoute component={UserDashboard} path=\"/dashboard\" exact/>\n          <PrivateRoute component={UserProfile} path=\"/dashboard/profile/\" exact/>\n          <PrivateRoute component={ChangePassword} path=\"/dashboard/profile/ChangePassword\" exact/>\n\n        </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/danaeis/Templates/react-project/compaign/src/components/Utils/PublicRoute.js",[],["147","148"],"/home/danaeis/Templates/react-project/compaign/src/components/Utils/Common.js",[],"/home/danaeis/Templates/react-project/compaign/src/components/Utils/PrivateRoute.js",[],"/home/danaeis/Templates/react-project/compaign/src/components/dashboard/UserProfile.js",["149","150","151","152","153","154","155"],"import Axios from 'axios';\nimport React, { useState } from 'react';\nimport { getToken, removeUserSession } from '../Utils/Common';\nimport axios from 'axios'\nimport Header from './Header'\nimport Profile from './Profile'\nimport {getApi,getAccessToken} from '../Utils/Common'\n\nfunction UserProfile(props) {\n  \n \n  return (\n    <div>\n      <Header></Header>\n      <Profile></Profile>\n      <br/>\n    </div>\n  );\n}\n \nexport default UserProfile;","/home/danaeis/Templates/react-project/compaign/src/components/dashboard/Profile.js",["156","157","158","159","160","161","162"],"import React, {useEffect, useState} from \"react\";\nimport axios from 'axios'\nimport {getApi,getToken} from '../Utils/Common'\nimport 'font-awesome/css/font-awesome.min.css';\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n// import { Button } from \"bootstrap\";\n\n\nimport ChangePassword from '../login/ChangePassword'\nimport UpdateProfile from './UpdateProfile'\nimport { Col,Row } from \"react-bootstrap\";\nexport default function Profile({ fixed }) {\n\n  let content = null;\n  \n      content = \n        \n            <div className=\"relative col-md-10 col-sm-10 col-lg-10 mx-auto my-auto\">\n              <div className=\"card text-center border-0 shadow z-depth-2 rounded\">\n                <Card>\n                    <Card.Body>\n                      \n                      <Card.Text>\n\n                        <Row className=\"mx-2\">\n                          <Col className=\"border-right ml-2\">\n                          <UpdateProfile/>\n                          </Col>\n                          \n                          \n                          <Col className=\"border-right ml-2\">\n                          <ChangePassword/>\n                          </Col>\n                      \n                        </Row>\n                      \n                      \n                      </Card.Text>\n                      \n                    </Card.Body>\n                </Card>\n\n              </div></div>\n\n\n    \n\n  return (\n    <div >\n      {content}\n    </div>\n  )\n}","/home/danaeis/Templates/react-project/compaign/src/components/dashboard/campDetail.js",["163","164","165","166","167","168","169"],"import React, {useEffect, useState} from \"react\";\nimport axios from 'axios'\nimport {getApi,getToken} from '../Utils/Common'\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport Spinner from 'react-bootstrap/Spinner'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button'\nimport { Card,CardImg } from \"react-bootstrap\";\nimport Image from 'react-bootstrap/Image'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport logo2 from \"../../images/logo2.png\"\nimport Header from \"./Header\";\nimport { useParams } from 'react-router-dom';\n\nexport default function CampDetail(props) {\n\n  const {id} = useParams();\n  const [compaign, setCompaign] = useState([]);\n  const [error, setError] = useState(null);\n  const [isResponced, setIsResponced] = useState(false);\n \n  let content = null;\n  const url=getApi();\n  // let campid = props.id;\n  // console.log(props.id , \"camp id\");\n  // setCompaign(props.res);\n  // setIsResponced(props.responce);\n  // setError(props.error);\n    \n\n  useEffect(()=>{\n    axios.get(`${url}/api/reserve/camp/detail/${id}/`,\n      {\n        headers:{\n          'authorization': `JWT ${getToken()}`\n        }\n      })\n      .then((res)=> {\n        // console.log(res);\n        setCompaign(res.data);\n        setIsResponced(true);\n        \n        // console.log('total',userCompaigns);\n      })\n      .catch((error) => {\n        console.log(\"error:\",error);\n        setIsResponced(true);\n        setError(error);\n      })\n    },[url])\n\n  \n  if (error) {\n    content=\n    <Card>\n      {error}\n    </Card>\n\n  }\n  if(isResponced ){\n\n   console.log(compaign);\n        content=\n        <div className=\"relative col-md-10 col-sm-10 col-lg-10 mx-auto my-auto\">\n            <div className=\"card text-center border-0 shadow z-depth-2 rounded\">\n              <Card className=\"text-center\">\n                  <Card.Header className=\"bg-light text-center\">\n                  <Row className=\" px-auto\">\n                  \n\n                  </Row>\n                  <Card.Title className=\"text-primary\">{compaign.name}</Card.Title>\n                \n                \n                    </Card.Header>\n                  <Card.Body className=\"text-center\" style={{'max-height': 'calc(100vh - 210px)', 'overflow-y': 'auto', 'background-color': 'primary' }} >\n                  \n                  {(compaign.image)? \n                          <Card.Img \n                            variant=\"top\" \n                            className=\"mx-auto my-2 col-md-6\" \n                            // onClick={()=> { return(<Redirect to={\"https://\" + compaign.image.substr(16,compaign.image.length)}/>)}}\n                            src={\"https://\" + compaign.image.substr(16,compaign.image.length)} \n                            alt=\"پوستر اردو\" \n                            height=\"100%\"/>\n                          \n                          :<Card.Img variant=\"top\" className=\"mx-auto my-2\" src=\"#\" alt=\"پوستر اردو\" />}\n                  \n                      <h5 className=\"text-black\">\n                        <small className=\"ml-3 text-info \">توضیحات اردو:</small>\n                      {compaign.description} \n                      </h5>\n                      <h5 className=\"text-primary\">\n                        <small className=\"text-info\">هزینه ثبت نام:     </small>\n                          {compaign.cost} \n                          <small className=\"text-black\">    تومان </small>\n\n                        </h5>\n                      <h5 className=\"text-primary\">\n                        <small className=\"text-info\">زمان برگزاری: </small>\n                        {compaign.execution_time}\n                        </h5>\n                        <Button className=\"text-center my-3 px-5\"  >{compaign.is_registered? \"ثبت نام شده\" : \"ثبت نام \"}</Button>\n                  </Card.Body>\n                  {/* <Card.Footer >\n                      <Button className=\"text-center\"  >{compaign.is_registered? \"ثبت نام شده\" : \"ثبت نام \"}</Button>\n                  </Card.Footer> */}\n              </Card>\n            </div>\n        </div>\n\n  }\n  else{\n    content = \n     <Card>\n         یافت نشد . . \n     </Card>\n    \n  }\n\n  \n\n  return (\n    <div >\n      <Header></Header>\n      {content}\n    </div>\n  )\n}","/home/danaeis/Templates/react-project/compaign/src/components/login/ForgotPassword.js",["170","171","172","173"],"import React, {useEffect, useState} from \"react\";\nimport axios from 'axios'\nimport {getApi,getToken} from '../Utils/Common'\n\nimport Button from 'react-bootstrap/Button';\nimport Toast from 'react-bootstrap/Toast'\nimport Image from 'react-bootstrap/Image'\nimport logo2 from \"../../images/logo2.png\"\n\nimport back from \"../../images/back.png\"\n\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nimport Card from 'react-bootstrap/Card'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { Link } from \"react-router-dom\";\nimport FloatingLabel from 'react-styled-floating-label';\n\nexport default function ForgotPassword(props) {\nconst [email, setEmail] = useState(null);\n\nconst [show, setShow] = useState(false);\nconst [error, setError] = useState(null);\nconst [isLoading, setIsLoading] = useState(false);\nconst [isResponced, setIsResponced] = useState(false);\n\nconst url = getApi();\nlet handleSubmit = (event) => {\n  event.preventDefault();\n  setShow(true);\n  console.log(email);\n  setIsLoading(true);\n\n  axios.post(`${url}/api/auth/users/reset_password/`,{\n    \"email\" : email,\n  },{\n    'Content-Type': 'application/json',\n  })\n  .then((response)=>{\n    console.log(response);\n    //props.onHide();\n    setIsLoading(false);\n    setIsResponced(true);\n  })\n \n}\n\n\n\n    let content = \n    <div className=\"row align-items-center min-vh-100 \">\n    <div className=\"col-md-10 col-sm-10 col-lg-10 mx-auto my-auto\">\n    <Card className=\"text-center\">\n            <Card.Header className=\"bg-light text-center\">\n            <Row className=\" px-auto\">\n              <Col xs={3} md={2} className=\"mx-auto mr-0\">\n                <Image src={logo2} rounded fluid/>\n              </Col>\n\n            </Row>\n               \n            <p className=\" text-info font-weight-bold \">\n                  <br/>\n                سامانه اردوهای دانشگاه شهید رجایی\n                </p>\n           \n              </Card.Header>\n            <Card.Body>\n                <div>\n                <p className=\" text-info \">\n                    فراموشی رمز عبور\n                </p>\n                    <form className=\"\"  method=\"POST\" onSubmit={(e) => {handleSubmit(e);}}>\n                            \n                            <div className=\"form-group border rounded-lg shadow-top-sm\" >\n                            <FloatingLabel text=\"email\">\n                              <input \n                                  aria-label=\"email address \"\n                                  name=\"email\"\n                                  id=\"email\" \n                                  type=\"email\"\n                                  \n                                  onChange={(e) => {setEmail(e.target.value)}}\n                                  required \n                                  className=\"form-control border-0\"\n                                  />\n                            </FloatingLabel>\n                            </div>\n                            <Button\n                                    type=\"submit\"\n                                    varient=\"primary\"\n                                    className=\" d-block mx-auto \"\n                                    \n                                    >\n                                    \n                                    {isLoading ? <Spinner animation=\"border\" variant=\"primary\" /> : ' بازیابی رمز عبور'}\n                          </Button>\n\n\n                          <div className=\"form-group pt-3\">\n                            <Link className=\"text-info \" variant=\"light\" to=\"/login\">\n                              بازگشت به صفحه ی ورود     <Image src={back} width=\"3%\"/>\n                            </Link>\n                          </div>\n\n                    </form>\n                  </div>\n        </Card.Body>\n        \n      </Card>\n</div></div>\n\nlet result = null;\nif(isResponced){\n \n  result=\n    <div className=\"fixed-bottom mx-4 my-4\">\n        <Toast onClose={() => setShow(false)} show={show} delay={5000} autohide>\n          <Toast.Header>\n          <strong className=\"mr-auto text-primary text-right\">سامانه اردوها</strong>\n            <p></p>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              className=\"rounded mr-2\"\n              alt=\"\"\n            />    \n            <small></small>\n          </Toast.Header>\n          <Toast.Body>\n           لینک تغییر رمزعبور به ایمیلتان ارسال خواهد شد;) \n          \n          \n          </Toast.Body>\n        </Toast>\n       \n      </div> \n  \n}\n\n\n    return (\n      <div>\n         {content}\n         {result}\n      </div>\n     \n    );\n  }","/home/danaeis/Templates/react-project/compaign/src/components/login/ResetPassword.js",["174","175","176","177","178","179","180"],"import React ,{useState} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport logo from \"../../images/logo.jpg\"\nimport axios from \"axios\";\nimport { setUserSession, getApi , getToken} from '../Utils/Common';\nimport ForgotPassword from './ForgotPassword';\n\nimport Spinner from 'react-bootstrap/Spinner'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Card from 'react-bootstrap/Card'\nimport Image from 'react-bootstrap/Image'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport logo2 from \"../../images/logo2.png\"\nimport basij from \"../../images/basij.jpg\"\n\nimport { useParams } from 'react-router-dom';\n\nimport 'font-awesome/css/font-awesome.min.css';\n\n\n\nexport default function ResetPassword(props) {\n    const {uid} = useParams();\n    const {token} = useParams();\nconsole.log(uid , token);\n\n\nconst [isLoading, setIsLoading] = useState(false); \nconst [redirect, setRedirect] = useState(false);\n\nconst [error, setError] = useState(null);\nconst [state , setState] = useState({\n    \n    newpassword : \"\",\n    renewpassword : \"\"\n})\n\nlet handleSubmit = (event) =>{\n    event.preventDefault();\n    console.log(uid , token);\n    let url = getApi();\n    if(state.newpassword === state.renewpassword){\n        console.log(\"on call\");\n       \n        axios.post(`${url}/api/auth/users/reset_password_confirm/`,\n        \n            {\n                \"new_password\": state.newpassword,\n                \"re_new_password\": state.renewpassword,\n                \"token\":token,\n                \"uid\":uid,\n            },\n            {\n              headers:{\n                'Content-Type': 'application/json',\n            }\n            }\n            \n            )\n            .then((res)=> {\n              console.log(res.status);\n\n              //if(res.status === 204){\n                console.log(\"OK\");\n                \n                props.onHide();\n              //}\n             \n              setRedirect(true);\n              setIsLoading(false);\n\n            })\n            .catch(e => {\n              console.log(\"error:\",e);\n             // props.show = true;\n              setIsLoading(false);\n              \n              setError(true);\n            })\n      }\n\n}\n// let handleChange =()=>{\n//     console.log(uid , token);\n// }\n\n\nif(redirect) return <Redirect to='/login'/>;\nreturn(\n    <div>\n        <div className=\"row align-items-center min-vh-100 \">\n        <div className=\"col-md-10 col-sm-10 col-lg-10 mx-auto my-auto\">\n        <Card className=\"text-center\">\n            <Card.Header className=\"bg-light\">\n           \n            <Row className=\" px-auto\">\n              <Col xs={3} md={2} className=\"mx-auto mr-0\">\n                <Image src={logo2} rounded fluid/>\n              </Col>\n              {/* <Col xs={3} md={2} className=\"mx-auto mr-0\">\n                <Image src={basij} rounded fluid/>\n              </Col> */}\n\n              \n              {/* <Col xs={5} md={5} >\n                <p className=\" text-info font-weight-bold \">\n                  <br/><br/>\n                سامانه اردوها ی دانشگاه شهید رجایی\n                </p>\n              </Col> */}\n\n            </Row>\n               \n            <p className=\" text-info font-weight-bold \">\n                  <br/>\n                سامانه اردوهای دانشگاه شهید رجایی\n                </p>     \n               \n                </Card.Header>\n            <Card.Body>\n                <Card.Title className=\"pb-3\">تعیین رمزعبور جدید</Card.Title>\n                <Card.Text>\n                <form className=\"\"  method=\"POST\" onSubmit={handleSubmit}>\n                          \n                          \n\n                          <div className=\"form-group border rounded-lg shadow-top-sm\" >\n                          <input \n                              aria-label=\"newPassword\" \n                              name=\"newpassword\" \n                              type=\"password\" \n                              required \n                              className=\"form-control \"\n                              placeholder=\"رمز عبور جدید\"\n                              onChange={(e) => {setState({...state, newpassword : e.target.value})}}\n                              />\n                          </div>\n                          <div className=\"form-group rounded-lg shadow-top-sm\">\n                          <input \n                              aria-label=\"renewPassword\" \n                              name=\"renewpassword\" \n                              type=\"password\" \n                              required \n                              className=\"form-control \"\n                              placeholder=\"تکرار رمز عبور جدید\"\n                              onChange={(e) => {setState({...state, renewpassword : e.target.value})}}\n                          />\n                          </div>\n                         \n                            {error && <label variant=\"danger\">{error}</label>}\n                        <div className=\"form-group\">\n                            <Button className=\"text-center\" type=\"submit\"> \n                            {isLoading? <Spinner animation=\"border\" variant=\"primary\" />:\"ثبت رمزعبور\"} \n                            </Button>\n                        </div>\n\n                  </form>\n                  \n                </Card.Text>\n                {/* <Button variant=\"primary\">ثبت رمزعبور</Button> */}\n            </Card.Body>\n            {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n        </Card> \n            \n            \n    </div></div></div>\n)\n\n}","/home/danaeis/Templates/react-project/compaign/src/components/dashboard/UpdateProfile.js",["181","182","183","184","185","186","187","188"],"\nimport React, {useEffect, useState} from \"react\";\nimport axios from 'axios'\nimport {getApi,getToken} from '../Utils/Common'\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport Spinner from 'react-bootstrap/Spinner'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\n\nexport default function UpdateProfile(props) {\n\n\n  const [input , setInput] = useState({\n    mobile_phone_number : \"\",\n    account_number : \"\",\n    email : \"\"\n})\n\n    \n    const [userName, setUserName] = useState('');\n    const [studentCode, setStudentCode] = useState('');\n    //const [phoneNumber, setPhoneNumber] = useState('');\n    const [studyField, setStudyField] = useState('');\n    //const [email, setEmail] = useState(' ');\n    //const [account, setAccount] = useState(' ');\n\n\n \n  const [error, setError] = useState(\"\");\n  const [isResponced, setIsResponced] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [reset, setReset] = useState(false);\n\n  const [isError, setIsError] = useState(false);\n\n\n  const [show, setShow] = useState(false);\n  const [isUpdate, setIsUpdate] = useState(false);\n \n\n  const url=getApi();\n\n\n  useEffect(()=>{\n    axios.get(`${url}/api/identity/user_info/`,\n      {\n        headers:{\n          'authorization': `JWT ${getToken()}`\n        }\n      })\n      .then((res)=> {\n        setUserName(`${res.data.first_name} ${res.data.last_name}`);\n        setStudentCode(`${res.data.student_code}`);\n        input.mobile_phone_number = res.data.mobile_phone_number ;\n        setStudyField(`${res.data.field_of_study}`);\n        input.email = res.data.email ;\n        input.account_number = res.data.account_number ;\n\n        // setIsAuthorized(true);\n        setIsResponced(true);\n        // console.log(input);\n      })\n      .catch((error) => {\n        setIsResponced(true);\n        // setUserName()\n        //setError(error.response);\n        console.log(\"error:\",error);\n      })\n  },[url])\n\n\n  let validate = ()=>{\n    let errors = \"\";\n    let isValid = true;\n  \n    if (input.account_number === \"\") {\n      isValid = false;\n      setIsError(true);\n      errors = errors + \"فیلد شماره حساب نمیتواند خالی باشد\\n\";\n    }    \n    if (input.mobile_phone_number === \"\" || input.mobile_phone_number.length < 11) {\n      isValid = false;\n      setIsError(true);\n      errors = errors + \"فیلد شماره تلفن نمیتواند کمتر از ۱۱ رقم باشد\\n\";\n    }\n    if (input.email === \"\") {\n        isValid = false;\n        setIsError(true);\n        errors = errors +  \"فیلد ایمیل نمیتواند خالی باشد\\n\";\n      }\n    \n    setError(errors)\n    return isValid;\n  }\n  \n  \n  let handleSubmit = (event) =>{\n    \n      \n\n      setIsLoading(true);\n      event.preventDefault();\n      console.log(\"on submit\");\n      \n      if(validate()){\n        console.log(\"on call\");\n        \n        axios.put(`${url}/api/identity/profile/update/`,\n        \n            {\n                \"mobile_phone_number\": input.mobile_phone_number,\n                \"account_number\": input.account_number,\n                \"email\" : input.email,\n            },\n            {\n              headers:{\n                'authorization': `JWT ${getToken()}`,\n                'Content-Type': 'application/json',}\n            }\n            \n            )\n            .then((res)=> {\n              console.log(res.status);\n\n             \n              console.log(\"OK\");\n              setIsUpdate (true);\n              \n   \n              setIsResponced(true);\n              setIsLoading(false);\n\n            })\n            .catch(e => {\n              console.log(\"error:\",e);\n              setError(\n                \"تغییر اطلاعات پروفایل شما با مشکل مواجه شد\"+\n                \"دوباره امتحان کنید\"\n                )\n              setIsLoading(false);\n              setIsResponced(true);\n              setIsError(true);\n            })\n      }\n     else{\n       setIsLoading(false);\n     }\n\n  }\n \n   \n    \n\n\n \n  let content= null;\n\n   \n    \n    content=\n          <Card className=\"text-right border-0\">\n            {/* <Card.Header className=\"bg-light text-center\"> */}\n              {/* <Card.Title className=\"h5 text-primary text-right pt-4 px-4\"><small className=\"text-info\">نام:</small> {userName} </Card.Title> */}\n            {/* </Card.Header> */}\n            <Card.Body className=\"text-center\">\n             <div >\n                  <form className=\"\"  method=\"POST\" onSubmit={(e) => {handleSubmit(e);setShow(true);}} >\n\n                  \n\n                          <div className=\"form-group rounded-lg shadow-top-sm\">\n                              <label className=\"text-info text-right\">شماره دانشجویی:</label>\n                          <input \n                              aria-label=\"studentCode\" \n                              name=\"studentCode\" \n                              type=\"text\" \n                              readOnly\n                              className=\"form-control \"\n                              value={studentCode}\n                              // onChange={(e) => {setInput({...input, studentCode : e.target.value})}}\n                          />\n                          </div>\n                         \n                          <div className=\"form-group rounded-lg shadow-top-sm\">\n                              <label className=\"text-info\">رشته تحصیلی:</label>\n                          <input \n                              aria-label=\"studyField\" \n                              name=\"studyField\" \n                              type=\"text\" \n                              readOnly\n                              className=\"form-control \"\n                              value={studyField}\n                              // onChange={(e) => {setInput({...input, email : e.target.value})}}\n                          />\n                          </div>      \n                          \n                          <div className=\"form-group rounded-lg shadow-top-sm\" >\n                              <label className=\"text-info\">شماره تلفن:</label>\n                          <input \n                              aria-label=\"phoneNumber\"\n                              name=\"phoneNumber\"\n                              id=\"phoneNumber\" \n                              type=\"text\"\n                              value={input.mobile_phone_number}\n                              onChange={(e) => {setInput({...input, mobile_phone_number : e.target.value})}}\n                              required \n                              className=\"form-control\"\n                              />\n                          </div>\n\n                          <div className=\"form-group rounded-lg shadow-top-sm\" >\n                              <label className=\"text-info\" >شماره حساب:</label>\n                          <input \n                              aria-label=\"account_number\" \n                              name=\"account_number\" \n                              id=\"account_number\"\n                              type=\"text\" \n                              required \n                              className=\"form-control \"\n                              value={input.account_number}\n                              onChange={(e) => {setInput({...input, account_number : e.target.value})}}\n                              />\n                          </div>\n                          <div className=\"form-group rounded-lg shadow-top-sm\">\n                              <label className=\"text-info\">ایمیل:</label>\n                          <input \n                              aria-label=\"email\" \n                              name=\"email\" \n                              type=\"email\" \n                              required \n                              className=\"form-control \"\n                              value={input.email}\n                              onChange={(e) => {setInput({...input, email : e.target.value})}}\n                          />\n                          </div>\n\n                          <label variant=\"danger\" className=\"texts text-danger py-3\">\n                          {isError ? error \n                          :null }\n                        </label>\n\n                         \n\n                            <div className=\"form-group\">\n                              <Button className=\"text-center\" type=\"submit\"> \n                              {isLoading? <Spinner animation=\"border\" variant=\"primary\" />:\" اعمال تغییرات\"} \n                              </Button>\n                            </div>\n\n                  </form>\n                  \n             </div>\n\n             </Card.Body>\n            \n         </Card>\n   \n\n\n\n   let result= null;\nif(isUpdate){\n  result=\n  <div className=\"fixed-bottom mx-4 my-4 shadow\">\n        <Toast onClose={() => setShow(false)} show={show} delay={5000} autohide>\n          <Toast.Header>\n          <strong className=\"mr-auto text-primary text-right\">سامانه اردوها</strong>\n            <p></p>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              className=\"rounded mr-2\"\n              alt=\"\"\n            />\n            \n            \n            <small></small>\n          </Toast.Header>\n          <Toast.Body>\n          تغییرات با موفقیت اعمال شد:)\n            {/* {!isChanged?\n            \"رمزعبور شما با موفقیت تغییر کرد.\"\n              :\n              \"  رمز عبور شما بنا به دلیلی تغییر نکرد:(  دوباره امتحان کنید\"\n            } */}\n          </Toast.Body>\n        </Toast>\n      </div> \n\n}\n\n// if(error){\n//   result=\n//   <div className=\"fixed-bottom mx-4 my-4\">\n//         <Toast onClose={() => setShow(false)} show={show} delay={5000} autohide>\n//           <Toast.Header>\n//           <strong className=\"mr-auto text-primary text-right\">سامانه اردوها</strong>\n//             <p></p>\n//             <img\n//               src=\"holder.js/20x20?text=%20\"\n//               className=\"rounded mr-2\"\n//               alt=\"\"\n//             />\n            \n            \n//             <small></small>\n//           </Toast.Header>\n//           <Toast.Body>\n          // تغییر اطلاعات پروفایل شما با مشکل مواجه شد\n          // دوباره امتحان کنید\n//           </Toast.Body>\n         \n//         </Toast>\n//       </div> \n\n// }\n\n\n\n   return (\n    <div>\n\n      {content}\n      {result}\n    </div>\n  )\n}\n",{"ruleId":"189","severity":1,"message":"190","line":3,"column":26,"nodeType":"191","messageId":"192","endLine":3,"endColumn":40},{"ruleId":"189","severity":1,"message":"193","line":7,"column":8,"nodeType":"191","messageId":"192","endLine":7,"endColumn":17},{"ruleId":"189","severity":1,"message":"194","line":8,"column":8,"nodeType":"191","messageId":"192","endLine":8,"endColumn":16},{"ruleId":"189","severity":1,"message":"195","line":11,"column":8,"nodeType":"191","messageId":"192","endLine":11,"endColumn":13},{"ruleId":"189","severity":1,"message":"196","line":13,"column":8,"nodeType":"191","messageId":"192","endLine":13,"endColumn":18},{"ruleId":"189","severity":1,"message":"197","line":14,"column":10,"nodeType":"191","messageId":"192","endLine":14,"endColumn":18},{"ruleId":"189","severity":1,"message":"198","line":15,"column":10,"nodeType":"191","messageId":"192","endLine":15,"endColumn":21},{"ruleId":"189","severity":1,"message":"199","line":15,"column":23,"nodeType":"191","messageId":"192","endLine":15,"endColumn":30},{"ruleId":"189","severity":1,"message":"200","line":15,"column":32,"nodeType":"191","messageId":"192","endLine":15,"endColumn":35},{"ruleId":"189","severity":1,"message":"201","line":22,"column":10,"nodeType":"191","messageId":"192","endLine":22,"endColumn":19},{"ruleId":"189","severity":1,"message":"202","line":22,"column":21,"nodeType":"191","messageId":"192","endLine":22,"endColumn":33},{"ruleId":"189","severity":1,"message":"203","line":23,"column":10,"nodeType":"191","messageId":"192","endLine":23,"endColumn":16},{"ruleId":"189","severity":1,"message":"204","line":23,"column":18,"nodeType":"191","messageId":"192","endLine":23,"endColumn":27},{"ruleId":"205","severity":1,"message":"206","line":165,"column":3,"nodeType":"207","messageId":"208","endLine":169,"endColumn":4},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"209","replacedBy":"213"},{"ruleId":"211","replacedBy":"214"},{"ruleId":"189","severity":1,"message":"215","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":13},{"ruleId":"189","severity":1,"message":"216","line":2,"column":17,"nodeType":"191","messageId":"192","endLine":2,"endColumn":25},{"ruleId":"189","severity":1,"message":"217","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":18},{"ruleId":"189","severity":1,"message":"218","line":3,"column":20,"nodeType":"191","messageId":"192","endLine":3,"endColumn":37},{"ruleId":"189","severity":1,"message":"219","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":13},{"ruleId":"189","severity":1,"message":"220","line":7,"column":9,"nodeType":"191","messageId":"192","endLine":7,"endColumn":15},{"ruleId":"189","severity":1,"message":"221","line":7,"column":16,"nodeType":"191","messageId":"192","endLine":7,"endColumn":30},{"ruleId":"209","replacedBy":"222"},{"ruleId":"211","replacedBy":"223"},{"ruleId":"189","severity":1,"message":"224","line":2,"column":16,"nodeType":"191","messageId":"192","endLine":2,"endColumn":25},{"ruleId":"189","severity":1,"message":"195","line":8,"column":8,"nodeType":"191","messageId":"192","endLine":8,"endColumn":13},{"ruleId":"189","severity":1,"message":"225","line":11,"column":8,"nodeType":"191","messageId":"192","endLine":11,"endColumn":11},{"ruleId":"189","severity":1,"message":"200","line":12,"column":8,"nodeType":"191","messageId":"192","endLine":12,"endColumn":11},{"ruleId":"189","severity":1,"message":"226","line":27,"column":10,"nodeType":"191","messageId":"192","endLine":27,"endColumn":21},{"ruleId":"189","severity":1,"message":"227","line":29,"column":10,"nodeType":"191","messageId":"192","endLine":29,"endColumn":15},{"ruleId":"189","severity":1,"message":"228","line":29,"column":17,"nodeType":"191","messageId":"192","endLine":29,"endColumn":25},{"ruleId":"229","severity":1,"message":"230","line":84,"column":60,"nodeType":"231","messageId":"232","endLine":84,"endColumn":61},{"ruleId":"189","severity":1,"message":"233","line":1,"column":37,"nodeType":"191","messageId":"192","endLine":1,"endColumn":43},{"ruleId":"189","severity":1,"message":"234","line":8,"column":8,"nodeType":"191","messageId":"192","endLine":8,"endColumn":14},{"ruleId":"189","severity":1,"message":"235","line":12,"column":8,"nodeType":"191","messageId":"192","endLine":12,"endColumn":22},{"ruleId":"189","severity":1,"message":"236","line":48,"column":9,"nodeType":"191","messageId":"192","endLine":48,"endColumn":22},{"ruleId":"209","replacedBy":"237"},{"ruleId":"211","replacedBy":"238"},{"ruleId":"189","severity":1,"message":"224","line":1,"column":16,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"195","line":7,"column":8,"nodeType":"191","messageId":"192","endLine":7,"endColumn":13},{"ruleId":"189","severity":1,"message":"239","line":9,"column":8,"nodeType":"191","messageId":"192","endLine":9,"endColumn":13},{"ruleId":"189","severity":1,"message":"240","line":17,"column":8,"nodeType":"191","messageId":"192","endLine":17,"endColumn":13},{"ruleId":"189","severity":1,"message":"241","line":21,"column":8,"nodeType":"191","messageId":"192","endLine":21,"endColumn":21},{"ruleId":"189","severity":1,"message":"242","line":37,"column":8,"nodeType":"191","messageId":"192","endLine":37,"endColumn":17},{"ruleId":"189","severity":1,"message":"243","line":37,"column":19,"nodeType":"191","messageId":"192","endLine":37,"endColumn":31},{"ruleId":"189","severity":1,"message":"244","line":39,"column":20,"nodeType":"191","messageId":"192","endLine":39,"endColumn":33},{"ruleId":"189","severity":1,"message":"245","line":40,"column":20,"nodeType":"191","messageId":"192","endLine":40,"endColumn":33},{"ruleId":"209","replacedBy":"246"},{"ruleId":"211","replacedBy":"247"},{"ruleId":"189","severity":1,"message":"248","line":3,"column":3,"nodeType":"191","messageId":"192","endLine":3,"endColumn":8},{"ruleId":"189","severity":1,"message":"197","line":4,"column":3,"nodeType":"191","messageId":"192","endLine":4,"endColumn":11},{"ruleId":"189","severity":1,"message":"216","line":6,"column":17,"nodeType":"191","messageId":"192","endLine":6,"endColumn":25},{"ruleId":"189","severity":1,"message":"224","line":6,"column":27,"nodeType":"191","messageId":"192","endLine":6,"endColumn":36},{"ruleId":"189","severity":1,"message":"219","line":7,"column":8,"nodeType":"191","messageId":"192","endLine":7,"endColumn":13},{"ruleId":"189","severity":1,"message":"249","line":16,"column":10,"nodeType":"191","messageId":"192","endLine":16,"endColumn":17},{"ruleId":"189","severity":1,"message":"218","line":16,"column":19,"nodeType":"191","messageId":"192","endLine":16,"endColumn":36},{"ruleId":"189","severity":1,"message":"190","line":16,"column":38,"nodeType":"191","messageId":"192","endLine":16,"endColumn":52},{"ruleId":"209","replacedBy":"250"},{"ruleId":"211","replacedBy":"251"},{"ruleId":"189","severity":1,"message":"215","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":13},{"ruleId":"189","severity":1,"message":"216","line":2,"column":17,"nodeType":"191","messageId":"192","endLine":2,"endColumn":25},{"ruleId":"189","severity":1,"message":"217","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":18},{"ruleId":"189","severity":1,"message":"218","line":3,"column":20,"nodeType":"191","messageId":"192","endLine":3,"endColumn":37},{"ruleId":"189","severity":1,"message":"219","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":13},{"ruleId":"189","severity":1,"message":"220","line":7,"column":9,"nodeType":"191","messageId":"192","endLine":7,"endColumn":15},{"ruleId":"189","severity":1,"message":"221","line":7,"column":16,"nodeType":"191","messageId":"192","endLine":7,"endColumn":30},{"ruleId":"189","severity":1,"message":"224","line":1,"column":16,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"216","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":35},{"ruleId":"189","severity":1,"message":"219","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":13},{"ruleId":"189","severity":1,"message":"220","line":3,"column":9,"nodeType":"191","messageId":"192","endLine":3,"endColumn":15},{"ruleId":"189","severity":1,"message":"217","line":3,"column":16,"nodeType":"191","messageId":"192","endLine":3,"endColumn":24},{"ruleId":"189","severity":1,"message":"252","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":15},{"ruleId":"189","severity":1,"message":"234","line":8,"column":8,"nodeType":"191","messageId":"192","endLine":8,"endColumn":14},{"ruleId":"189","severity":1,"message":"252","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":15},{"ruleId":"189","severity":1,"message":"195","line":7,"column":8,"nodeType":"191","messageId":"192","endLine":7,"endColumn":13},{"ruleId":"189","severity":1,"message":"199","line":9,"column":15,"nodeType":"191","messageId":"192","endLine":9,"endColumn":22},{"ruleId":"189","severity":1,"message":"253","line":10,"column":8,"nodeType":"191","messageId":"192","endLine":10,"endColumn":13},{"ruleId":"189","severity":1,"message":"200","line":11,"column":8,"nodeType":"191","messageId":"192","endLine":11,"endColumn":11},{"ruleId":"189","severity":1,"message":"254","line":13,"column":8,"nodeType":"191","messageId":"192","endLine":13,"endColumn":13},{"ruleId":"255","severity":1,"message":"256","line":52,"column":7,"nodeType":"257","endLine":52,"endColumn":12,"suggestions":"258"},{"ruleId":"189","severity":1,"message":"224","line":1,"column":16,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"217","line":3,"column":16,"nodeType":"191","messageId":"192","endLine":3,"endColumn":24},{"ruleId":"189","severity":1,"message":"259","line":24,"column":8,"nodeType":"191","messageId":"192","endLine":24,"endColumn":13},{"ruleId":"189","severity":1,"message":"260","line":24,"column":15,"nodeType":"191","messageId":"192","endLine":24,"endColumn":23},{"ruleId":"189","severity":1,"message":"261","line":3,"column":8,"nodeType":"191","messageId":"192","endLine":3,"endColumn":12},{"ruleId":"189","severity":1,"message":"190","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":24},{"ruleId":"189","severity":1,"message":"217","line":5,"column":35,"nodeType":"191","messageId":"192","endLine":5,"endColumn":43},{"ruleId":"189","severity":1,"message":"262","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":22},{"ruleId":"189","severity":1,"message":"195","line":9,"column":8,"nodeType":"191","messageId":"192","endLine":9,"endColumn":13},{"ruleId":"189","severity":1,"message":"239","line":11,"column":8,"nodeType":"191","messageId":"192","endLine":11,"endColumn":13},{"ruleId":"189","severity":1,"message":"240","line":17,"column":8,"nodeType":"191","messageId":"192","endLine":17,"endColumn":13},{"ruleId":"189","severity":1,"message":"195","line":8,"column":8,"nodeType":"191","messageId":"192","endLine":8,"endColumn":13},{"ruleId":"189","severity":1,"message":"225","line":11,"column":8,"nodeType":"191","messageId":"192","endLine":11,"endColumn":11},{"ruleId":"189","severity":1,"message":"200","line":12,"column":8,"nodeType":"191","messageId":"192","endLine":12,"endColumn":11},{"ruleId":"189","severity":1,"message":"263","line":25,"column":12,"nodeType":"191","messageId":"192","endLine":25,"endColumn":20},{"ruleId":"189","severity":1,"message":"226","line":35,"column":10,"nodeType":"191","messageId":"192","endLine":35,"endColumn":21},{"ruleId":"189","severity":1,"message":"227","line":37,"column":10,"nodeType":"191","messageId":"192","endLine":37,"endColumn":15},{"ruleId":"189","severity":1,"message":"228","line":37,"column":17,"nodeType":"191","messageId":"192","endLine":37,"endColumn":25},{"ruleId":"255","severity":1,"message":"264","line":74,"column":5,"nodeType":"257","endLine":74,"endColumn":10,"suggestions":"265"},"no-unused-vars","'setUserSession' is defined but never used.","Identifier","unusedVar","'CardGroup' is defined but never used.","'CardDeck' is defined but never used.","'Modal' is defined but never used.","'CampDetail' is defined but never used.","'Redirect' is defined but never used.","'CardColumns' is defined but never used.","'CardImg' is defined but never used.","'Col' is defined but never used.","'modalShow' is assigned a value but never used.","'setModalShow' is assigned a value but never used.","'compId' is assigned a value but never used.","'setCompId' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-native-reassign",["266"],"no-negated-in-lhs",["267"],["266"],["267"],"'Axios' is defined but never used.","'useState' is defined but never used.","'getToken' is defined but never used.","'removeUserSession' is defined but never used.","'axios' is defined but never used.","'getApi' is defined but never used.","'getAccessToken' is defined but never used.",["266"],["267"],"'useEffect' is defined but never used.","'Row' is defined but never used.","'isResponced' is assigned a value but never used.","'reset' is assigned a value but never used.","'setReset' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useRef' is defined but never used.","'Button' is defined but never used.","'OverlayTrigger' is defined but never used.","'renderTooltip' is assigned a value but never used.",["266"],["267"],"'Toast' is defined but never used.","'basij' is defined but never used.","'FloatingLabel' is defined but never used.","'errorShow' is assigned a value but never used.","'setErrorShow' is assigned a value but never used.","'setLableShowU' is assigned a value but never used.","'setLableShowP' is assigned a value but never used.",["266"],["267"],"'Route' is defined but never used.","'getUser' is defined but never used.",["266"],["267"],"'Spinner' is defined but never used.","'Image' is defined but never used.","'logo2' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["268"],"'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'logo' is defined but never used.","'ForgotPassword' is defined but never used.","'userName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'input'. Either include it or remove the dependency array.",["269"],"no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},"Update the dependencies array to be: [id, url]",{"range":"274","text":"275"},"Update the dependencies array to be: [input, url]",{"range":"276","text":"277"},[1504,1509],"[id, url]",[2113,2118],"[input, url]"]